name: 'build latest docker'

on:
  workflow_run:
    workflows: [ "release base" ]
    types:
      - completed
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - 'build*'
      - 'release*'
      - 'config/**'
      - 'doc/**'
      - 'README.md'
      - 'pom.xml'
      - 'pom-standalone.xml'
      - 'docker/Dockerfile-v7'
      - 'docker/Dockerfile-base'
      - 'docker/Dockerfile-base-new'
      - 'docker/Dockerfile-native-base'
      - 'docker/Dockerfile-jre'
      - 'scripts/install.sh'
      - 'scripts/install-service.sh'
      - 'scripts/alist-tvbox.sh'
      - 'scripts/update_hostmode.sh'
      - 'scripts/update_native.sh'
      - 'scripts/update_native_host.sh'
      - 'scripts/update_new.sh'
      - 'scripts/update_xiaoya.sh'
      - '.github/workflows/build-base.yaml'
      - '.github/workflows/build-base-new.yaml'
      - '.github/workflows/build-native-dev.yaml'
      - '.github/workflows/build-native-base.yaml'
      - '.github/workflows/build-dev.yaml'
      - '.github/workflows/build-java.yaml'
      - '.github/workflows/build-v7.yaml'
      - '.github/workflows/release.yaml'
      - '.github/ISSUE_TEMPLATE/**'

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: ./web-ui
      - name: Install npm
        working-directory: ./web-ui
        run: npm ci
      - name: Build web UI
        working-directory: ./web-ui
        run: npm run build

      - name: setup graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          components: 'native-image'
          native-image-musl: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Extract Spring Boot layers
        working-directory: ./target
        run: java -Djarmode=layertools -jar alist-tvbox-1.0.jar extract
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set APP version
        run: |
          [ -d data ] || mkdir data
          export TZ=Asia/Shanghai
          echo $((($(date +%Y) - 2023) * 366 + $(date +%j | sed 's/^0*//'))).$(date +%H%M) > data/version
          echo "${{ github.event.head_commit.message }}" >> data/version
          cp data/version data/app_version
          cat data/version
      - name: Build xiaoya docker and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-xiaoya
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build xiaoya host mode docker and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-host
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox:hostmode
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox:host
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox-hostmode:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox-host:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build alist docker and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/alist-tvbox:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build alist TG docker and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-tg
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/alist-tvbox:tg
            ${{ secrets.DOCKERHUB_USERNAME }}/alist-tvbox:python
            ${{ secrets.DOCKERHUB_USERNAME }}/alist-tvbox-tg:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/alist-tvbox-python:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build xiaoya TG docker and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-xiaoya-tg
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox:tg
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox:python
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox-tg:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox-python:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build native with Maven (AMD64)
        run: |
          mvn -B -Pnative -Dnative.image.cache=true -Dnative-image.parallelism=4 package --file pom.xml
          chmod a+x target/atv
          ls -l target
      - name: Build alist native docker and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-alist-native
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/alist-tvbox:native
            ${{ secrets.DOCKERHUB_USERNAME }}/alist-tvbox-native:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build xiaoya native docker and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-native
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox:native
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox-native:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build xiaoya host native docker and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-native-host
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox:native-host
            ${{ secrets.DOCKERHUB_USERNAME }}/xiaoya-tvbox-native-host:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Send version
        env:
          api: ${{ secrets.VERSION_API }}
        if: ${{ env.api != '' }}
        run: |
          curl -XPOST -s "${{ env.api }}" -H "Content-Type: application/json" --data-binary @data/version
      - name: send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHANNEL_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}